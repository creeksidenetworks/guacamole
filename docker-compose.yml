# networks
networks:
  internal:
    driver: bridge

# services
services:
  # guacd
  guacd:
    container_name: guacd
    image: guacamole/guacd
    networks:
      internal:
    restart: always
    volumes:
      - ./runtime/monitor/drive:/drive:rw
      - ./runtime/monitor/record:/record:rw

  # postgres
  postgres:
    container_name: postgres_guacamole
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: 'Good2Great'
      POSTGRES_USER: guacamole_user
    image: postgres:15.2-alpine
    networks:
      internal:
    restart: always
    volumes:
      - ./runtime/guacdb/init:/docker-entrypoint-initdb.d:z
      - ./runtime/guacdb/data:/var/lib/postgresql/data:Z

  # guacamole
  guacamole:
    container_name: guacamole
    depends_on:
      - guacd
      - postgres
    env_file:
      # saml sso configuration file
      - .env
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: 'Good2Great'
      POSTGRES_USER: guacamole_user
      GUACAMOLE_HOME: '/etc/guacamole'

      ## SAML SSO
      ## SAML Metadata URL from IdP (Azure AD, Okta, etc)
      SAML_IDP_METADATA_URL: ${SAML_IDP_METADATA_URL}
      ## Alternative: Single Sign On URL
      SAML_IDP_URL: ${SAML_IDP_URL}
      ## These must match what was entered into Azure AD or Okta
      SAML_ENTITY_ID: ${SAML_ENTITY_ID}
      SAML_CALLBACK_URL: ${SAML_CALLBACK_URL}
      ## Change this to true if SSO is not working
      SAML_STRICT: false
      SAML_DEBUG: false
      ## SAML attribute/claim for group membership
      SAML_GROUP_ATTRIBUTE: groups

      ## Extension Priority, saml login link will show on left bottom corner
      EXTENSION_PRIORITY: "*, saml"
      ## If SAML extension fails, default back to local login
      SKIP_IF_UNAVAILABLE: saml

    image: guacamole/guacamole
    volumes:
      - ./runtime/guac:/etc/guacamole
    links:
      - guacd
    networks:
      internal:
    ports:
      - 8080:8080/tcp
    restart: always

  npm-app:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: npm-app
    restart: always
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    environment:
      DB_MYSQL_HOST: "npm-db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      # Uncomment the line below if IPv6 is not enabled on your host
      DISABLE_IPV6: 'true'
    volumes:
      - ./runtime/npm/data:/data
      - ./runtime/npm/letsencrypt:/etc/letsencrypt
    depends_on:
      - npm-db
    networks:
      internal:

  npm-db:
    image: 'mariadb:latest'
    container_name: npm-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./runtime/npm/mysql:/var/lib/mysql
    networks:
      internal: